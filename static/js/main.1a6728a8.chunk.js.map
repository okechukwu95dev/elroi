{"version":3,"sources":["components/images/logo.png","components/displayweather.js","components/location.js","components/dashboard.js","components/weather.js","components/images/mostly-sunny.svg","components/navigation.js","App.js","index.js"],"names":["DisplayWeather","props","iconurl","icon","className","Math","floor","main_temp","main_temp_max","weather_main","src","alt","Location","city_name","country_name","current_date","Date","toLocaleTimeString","max_temp","wind_speed","humidity","min_temp","Dashboard","w_global_data","w_new_data","console","log","days","length","map","createDashboard","i","main","temp","weather","temp_max","Weather","APIKEY","useState","zipcode","form","setForm","setWeather","key","setCount","e","a","count","preventDefault","test","isValidZip","alert","window","location","reload","fetch","then","res","json","data","cod","undefined","list","global_data","new_data","state","city","name","country","dt_txt","slice","temp_min","wind","speed","companyLogo","type","placeholder","onChange","target","value","handleChange","onClick","weatherData","Nav","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a6728a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6535885e.png\";","import React from 'react';\r\nimport \"./displayweather.css\";\r\n\r\n\r\n\r\nfunction DisplayWeather(props){\r\n    // console.log(props);\r\n    const iconurl = \"http://openweathermap.org/img/wn/\" + `${props.icon}`+ \"@2x.png\";\r\n\r\n\r\n    return (\r\n        <div className = \"displayweather\">\r\n            \r\n            <div className = \"maincard\">\r\n                <h1>\r\n                    {Math.floor(((props.main_temp)-273)*(9/5)+32)}\r\n                    <sup>o</sup>\r\n                    F\r\n                </h1>\r\n\r\n                <div className = \"max-temp\"> \r\n                Max temp:{Math.floor(((props.main_temp_max)-273)*(9/5)+32)} <sup>o</sup>F\r\n                </div>\r\n                <span className = \"weather-main\">\r\n                    {props.weather_main}\r\n                </span>\r\n                <img src ={iconurl} className = \"weather-icon\" alt = \"weather icon\" />\r\n                </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayWeather;","import React from 'react';\r\n\r\nimport \"./location.css\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Location(props){\r\n    const iconurl = \"http://openweathermap.org/img/wn/\" + `${props.icon}`+ \"@2x.png\";\r\n\r\n    return (\r\n        <div className=\"loc  \">\r\n            <div className=\"left\">\r\n            <div className = \"place\">\r\n                <h1 className=\"\">{props.city_name},{props.country_name}</h1>\r\n                </div>\r\n                <div className=\"temp\">\r\n                    <span>Current Temp:    </span> \r\n                    { \"  \" +   Math.floor(((props.main_temp)-273)*(9/5)+32)} <sup>o</sup>F\r\n                </div>\r\n\r\n                <div className=\"current-temperature__summary\">{props.current_date}</div>\r\n                \r\n                <div>{new Date().toLocaleTimeString(`en-${props.country_name}`)}</div>\r\n            </div>\r\n                \r\n   \r\n\r\n\r\n   <div className = 'right'>\r\n        <div className ='up'>\r\n\r\n            <div className = 'current'>\r\n            <h3>Overview</h3>\r\n            <img src ={iconurl} className = \"weather-icon\" alt = \"weather icon\" />\r\n            </div>\r\n\r\n            <div className = 'current'>\r\n                <h3>Weather</h3>\r\n                {props.weather_main}\r\n            </div>\r\n\r\n            <div className = 'current'>\r\n                <h3>Max Temp</h3>\r\n                {Math.floor(((props.max_temp)-273)*(9/5)+32)}<sup>o</sup>F\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div className = 'down'>\r\n            <div className = 'current'>\r\n                <h3>Wind Speed</h3>\r\n                {props.wind_speed + \" mph\"}\r\n            </div>\r\n\r\n            <div className = 'current'>\r\n                <h3>Humidity</h3>\r\n                {props.humidity + \"%\"}\r\n            </div>\r\n\r\n            <div className = 'current'>\r\n                <h3>Min Temp</h3>\r\n                {Math.floor(((props.min_temp)-273)*(9/5)+32)}<sup>o</sup>F\r\n            </div>\r\n\r\n        </div>\r\n    </div>    \r\n        </div>\r\n    ) \r\n\r\n}\r\n\r\nexport default Location;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {w_new_data,w_global_data} from './weather.js'\r\nimport DisplayWeather from \"./displayweather\"\r\nimport \"./dashboard.css\";\r\n\r\n\r\nfunction Dashboard () {\r\n    console.log(w_new_data);\r\n    console.log(w_global_data);\r\n    var days = [\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\"];\r\n\r\n\r\nfunction createDashboard(w_new_data,i){\r\n    \r\n    return (\r\n        <div>\r\n                 <h1 className = \"date\">{days[i]}</h1> \r\n                <DisplayWeather\r\n                        main_temp = {w_new_data.main.temp}\r\n                        weather_main = {w_new_data.weather[0].main}\r\n                        main_temp_max  = {w_new_data.main.temp_max}\r\n                        icon = {w_new_data.weather[0].icon} \r\n                />\r\n        </div>\r\n  \r\n    )\r\n}\r\nif (w_new_data.length > 1){\r\n    return (\r\n        <div className = \"dashboard\">\r\n           \r\n             <div>  \r\n        \r\n         {console.log(w_new_data)} \r\n        \r\n         <div className = 'data'>\r\n             {\r\n             w_new_data.map((createDashboard,days) => {\r\n                 <div key = {days}>\r\n                    {createDashboard} \r\n                 </div>\r\n             })\r\n             }\r\n\r\n         {w_new_data.map(createDashboard,days)}\r\n         \r\n         </div>\r\n       </div> \r\n        </div>\r\n     \r\n        )}else if (w_new_data.length < 1) {\r\n         return (<h1>Waiting</h1>)  \r\n        }\r\n    \r\n    }\r\n\r\n\r\n     export default Dashboard;\r\n\r\n  \r\n\r\n\r\n\r\n    ","import React, { useState } from 'react';\r\nimport DisplayWeather from \"./displayweather\"\r\nimport Location from \"./location\"\r\nimport \"./weather.css\";\r\nimport Dashboard from \"./dashboard\"\r\nimport  {global_data,new_data,nav_key} from './navigation'\r\nimport companyLogo from './images/mostly-sunny.svg';\r\n\r\n\r\n\r\nvar w_global_data ;\r\nvar w_new_data ;\r\nvar weather_key;\r\nvar w_local_key;\r\n\r\nfunction Weather (props) {\r\n    weather_key = 0;\r\n    w_local_key = 0;\r\n    // console.log(global_data)\r\n    // console.log(new_data)\r\n   \r\n\r\nconst APIKEY = \"41ab2a27dcef2b980b65b6e80a12e24b\";\r\n\r\n\r\n//setting the state of form after deconstruction \r\nconst [form,setForm] = useState({\r\n    zipcode: \"\"\r\n});\r\n\r\n//create state for the weather and its data \r\nconst [weather, setWeather] = useState({\r\n\r\n})\r\n\r\nconst [key,setCount] = useState(\r\n    0\r\n);\r\n\r\nasync function weatherData(e){\r\n    setCount(count => key +1);\r\n\r\n    if (key == 0){\r\n        weather_key = 0  \r\n    }\r\n\r\n    else{\r\n        weather_key = 1\r\n    }\r\n    // setCount(weather_key)\r\n    // console.log(key)\r\n    \r\n    e.preventDefault();\r\n   \r\n\r\n    var isValidZip = await (/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(form.zipcode));\r\n  \r\n    if (form.zipcode == \"\"  || !isValidZip ) \r\n\r\n    \r\n    {\r\n        alert(\"Add Correct 5 digit USA postcode values\");\r\n        window.location.reload();\r\n      \r\n    }\r\n\r\n    else{\r\n        const data = await fetch\r\n        \r\n        (`https://api.openweathermap.org/data/2.5/forecast?zip=${form.zipcode},us&appid=${APIKEY}`)\r\n       \r\n        .then(res => res.json())\r\n        .then(data => data); \r\n        // console.log(data)\r\n        if (data.cod != 200) {\r\n            alert(\"Please Enter A Valid Code\");\r\n            window.location.reload();\r\n        }\r\n\r\n        setWeather (\r\n            {\r\n                data : data\r\n            }\r\n        )\r\n\r\n        return data\r\n    }\r\n    }\r\n\r\n\r\n//function to handle form input\r\nconst handleChange = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value; \r\n\r\n    if (name == \"city\"){\r\n        setForm({...form,city:value})\r\n    }\r\n    if (name == \"country\"){\r\n        setForm({...form,country:value})\r\n    }\r\n    // console.log(form.city, form.country)\r\n    if (name == \"zipcode\"){\r\n        setForm({...form,zipcode:value});\r\n    }\r\n    // console.log(form.zipcode);\r\n}\r\n\r\nif (weather.data != undefined && weather.data.cod == 200){\r\n    // console.log (weather.data)\r\n        w_global_data = weather.data;\r\n        w_new_data = [weather.data.list[0],weather.data.list[8],weather.data.list[16],weather.data.list[24],weather.data.list[32]];\r\n        //  console.log(weather.data.list[0]);\r\n        //  console.log(w_new_data);\r\n     }\r\n\r\nelse{\r\n    w_global_data = global_data;\r\n    w_new_data = new_data;\r\n\r\n}\r\n\r\n\r\n    \r\n    if (props.state =='display' || key > 0 ){\r\n\r\n        return (\r\n            // form to collect user input \r\n           \r\n            <div className=\"weather\"> \r\n            {\r\n    \r\n             w_new_data != undefined && (w_new_data.length>0)  ? (\r\n                <div className = \"location\">  \r\n    \r\n    \r\n                <Location \r\n                main_temp ={w_new_data[0].main.temp} \r\n                city_name = {w_global_data.city.name}  \r\n                country_name =  {w_global_data.city.country}\r\n                weather_main = {w_new_data[0].weather[0].main}\r\n                current_date = {w_new_data[0].dt_txt.slice(0, 10)}\r\n                icon = {w_new_data[0].weather[0].icon} \r\n                max_temp = {w_new_data[0].main.temp_max}\r\n                min_temp = {w_new_data[0].main.temp_min}\r\n                wind_speed = {w_new_data[0].wind.speed}\r\n                humidity = {w_new_data[0].main.humidity}\r\n                />\r\n        \r\n                </div> \r\n                )  : null\r\n            }\r\n    \r\n    \r\n            {\r\n                        w_new_data != undefined && (w_new_data.length>0)  ? (\r\n                        <div>  \r\n                        <Dashboard />\r\n                        </div> \r\n                        )  : null\r\n            }       \r\n            </div> \r\n            \r\n            //end of return\r\n        );\r\n    }\r\n\r\n    else if (props.state == 'home'){\r\n        return(\r\n            <div className = 'main'>\r\n    \r\n                <div  className = 'logo'>\r\n                    <img src= {companyLogo} alt=\"logo image\" ></img>\r\n                    \r\n                </div>\r\n    \r\n                <div className = \"search-main\">\r\n                <form >\r\n                    <input type = \"text\" name=\"zipcode\" placeholder=\"ENTER zipcode in XXXXX format\"  onChange={e => handleChange(e)}/>\r\n                    <span className = 'main-btn'>\r\n                    <button className = \"submit\" \r\n                    onClick={(e) => {weatherData(e) }}>Search</button>\r\n                    </span>\r\n               </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return \"\";\r\n    }\r\n\r\n    //end of if statement\r\n//end of function \r\n}\r\n\r\nexport default Weather;\r\nexport {w_new_data,w_global_data,weather_key};\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/mostly-sunny.328f6894.svg\";","import React, { useState } from 'react';\r\nimport companyLogo from './images/logo.png';\r\nimport \"./displayweather.css\";\r\nimport \"./navigation.css\";\r\nimport Weather from \"./weather\"\r\nimport {weather_key} from \"./weather\"\r\n\r\n\r\nlet global_data = [];\r\nlet new_data = [];\r\nlet nav_key;\r\n\r\nfunction Nav() {\r\n\r\nnav_key = 0;\r\n\r\nconst APIKEY = \"41ab2a27dcef2b980b65b6e80a12e24b\";\r\n\r\n//setting the state of form after deconstruction \r\nconst [form,setForm] = useState({\r\n    zipcode: \"\"\r\n});\r\n//create state for the weather and its data \r\nconst [weather, setWeather] = useState({\r\n\r\n})\r\n\r\nconst [key,setCount] = useState(\r\n    0\r\n);\r\n\r\n  \r\n\r\n    async function weatherData(e){\r\n      \r\n        e.preventDefault();\r\n        setCount(count => key +1);\r\n        \r\n        if (key == 0){\r\n            nav_key = 0  \r\n        }\r\n        else{\r\n            nav_key = 1\r\n        }\r\n    \r\n        let isValidZip = await (/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(form.zipcode));\r\n  \r\n        if (form.zipcode == \"\"  || !isValidZip ) \r\n\r\n        {\r\n            alert(\"Add Correct 5 digit USA postcode values\");\r\n            console.log(form.zipcode)\r\n            window.location.reload();\r\n        }\r\n    \r\n        else{\r\n            const data = await fetch \r\n            (`https://api.openweathermap.org/data/2.5/forecast?zip=${form.zipcode},us&appid=${APIKEY}`)\r\n            .then(res => res.json())\r\n            .then(data => data); \r\n            console.log(data)\r\n            if (data.cod != 200) {\r\n                alert(\"Please Enter A Valid Code\");\r\n                window.location.reload();\r\n            }\r\n            setWeather (\r\n                {\r\n                    data : data\r\n                }\r\n            )\r\n            return key \r\n        }\r\n    \r\n        }\r\n\r\n        console.log(\"hello\");\r\n        console.log(global_data);\r\n        console.log(\"bye\");\r\n\r\n    const handleChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value; \r\n    \r\n        if (name == \"city\"){\r\n            setForm({...form,city:value})\r\n        }\r\n        if (name == \"country\"){\r\n            setForm({...form,country:value})\r\n        }\r\n        console.log(form.city, form.country)\r\n        if (name == \"zipcode\"){\r\n            setForm({...form,zipcode:value});\r\n        }\r\n    \r\n        console.log(form.zipcode);\r\n    }\r\n\r\n    if (weather.data != undefined && weather.data.cod == 200){\r\n        console.log (weather.data)\r\n                global_data = weather.data;\r\n                // nav_key = 1;\r\n                new_data = [weather.data.list[0],weather.data.list[8],weather.data.list[16],weather.data.list[24],weather.data.list[32]];\r\n                console.log(weather.data.list[0]);\r\n                console.log(new_data);\r\n            }\r\n  \r\n\r\n    return (\r\n        <div className = \"page\">\r\n        <div className = \"nav\">\r\n        <div  className = 'logo'>\r\n        <img src= {companyLogo} alt=\"logo image\" ></img>\r\n        <span>Weather</span>\r\n        </div>\r\n\r\n        <form className = \"search\">\r\n            <input type = \"text\" name=\"zipcode\" placeholder=\"SEARCH BY ZIPCODE\"  onChange={e => handleChange(e)}/>\r\n            <span className = \"btn\"> \r\n            <button className = \" submit\" onClick={(e) => weatherData(e)}>Submit</button>\r\n            <button className = \" reset\" onClick={(e) => window.location.reload()}>Reset</button>\r\n            </span>\r\n        </form>\r\n        </div>\r\n\r\n\r\n{/* //Display weather from navbar */}\r\n        {\r\n                    new_data != undefined && (new_data.length>0) && key > 0 ? (\r\n                    <div>  \r\n                    <Weather state = 'display'/>\r\n                    </div> \r\n                    ) : <Weather className = \"w\" state = \"home\"/>\r\n        }     \r\n     \r\n        </div>  \r\n\r\n    //end of reutbrn     \r\n    );\r\n}\r\n\r\n        \r\nexport default Nav;\r\nexport {global_data,new_data,nav_key};","import React from \"react\";\r\nimport Nav from './components/navigation'\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n     \r\n      <Nav />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  \r\n    <App />,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}